section [[
Ninja file for obfuscate.lua
This file is generated by running bang.
]]

section [[
This file is part of obfuscate.lua.

obfuscate.lua is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

obfuscate.lua is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with obfuscate.lua.  If not, see <https://www.gnu.org/licenses/>.

For further information about obfuscate.lua you can visit
https://cdelord.fr/obfuscate.lua
]]

local F = require "F"

var "builddir" ".build"
var "test" "$builddir/test"

rule "obfuscate" {
    command = "./obfuscate.lua $opts $in -o $out",
    implicit_in = "obfuscate.lua",
}

rule "run" {
    command = "$in > $out",
}

rule "diff" {
    description = "diff $in",
    command = "diff $in > $out || (cat $out && false)",
}

F.foreach({"", "-x"},           function(target)
F.foreach({"", "-b", "-bb"},    function(bytecode)
F.foreach({"", "-s"},           function(strip)
F.foreach({"", "-z"},           function(compress)
    local opts = {target, bytecode, strip, compress}
    local script = "$test/hello"..F.str(opts)..".lua"
    local output = "$test/hello"..F.str(opts)..".txt"
    local diff   = "$test/hello"..F.str(opts)..".diff"
    build(script) { "obfuscate", "test/hello.lua", opts=opts }
    build(output) { "run", script,
        validations = build(diff) { "diff", output, "test/hello.stdout" },
    }
end)
end)
end)
end)
